name: CI - Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  test:
    name: Test on Java ${{ matrix.java-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21, 22] # Test on current and next Java versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Validate Maven wrapper
        run: |
          if [ ! -f "./mvnw" ]; then
            echo "Maven wrapper not found, using system maven"
          else
            chmod +x ./mvnw
          fi

      - name: Compile code
        run: mvn clean compile -B

      - name: Run unit tests
        run: mvn test -B

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Maven Tests (Java ${{ matrix.java-version }})
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-java-${{ matrix.java-version }}
          path: |
            target/surefire-reports/
            target/site/jacoco/

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Checkstyle
        run: mvn checkstyle:check -B
        continue-on-error: true

      - name: Run SpotBugs
        run: mvn spotbugs:check -B
        continue-on-error: true

      - name: Generate code coverage
        run: mvn jacoco:report -B

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: false
          verbose: true

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 80
          title: "Code Coverage Report"

      - name: Upload code quality artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            target/checkstyle-result.xml
            target/spotbugsXml.xml
            target/site/jacoco/

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: maven

      - name: Run performance tests
        run: |
          mvn test -B -Dtest="**/*PerformanceTest" -Dmilitary.test.performance.enabled=true

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-test-results
          path: target/performance-reports/

  build-artifact:
    name: Build Application Artifact
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: maven

      - name: Package application
        run: mvn package -B -DskipTests

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: military-coordination-jar
          path: target/*.jar
          retention-days: 30
